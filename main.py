import os
import logging
from quart import Quart, request, jsonify, redirect
from telegram import Bot
import requests
import urllib.parse
import uuid

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
STRAVA_CLIENT_ID = os.getenv("STRAVA_CLIENT_ID")
STRAVA_CLIENT_SECRET = os.getenv("STRAVA_CLIENT_SECRET")
PORT = int(os.getenv("PORT", 5000))

bot = Bot(token=TELEGRAM_TOKEN)
app = Quart(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (state)
state_storage = {}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Strava
@app.route("/start", methods=["GET"])
async def start():
    telegram_id = request.args.get("telegram_id")
    if not telegram_id:
        return "Telegram ID –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.", 400

    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π state
    state = str(uuid.uuid4())
    state_storage[state] = telegram_id

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    params = {
        "client_id": STRAVA_CLIENT_ID,
        "response_type": "code",
        "redirect_uri": f"{WEBHOOK_URL}/strava_callback",
        "scope": "read,activity:read_all",
        "state": state
    }
    auth_url = f"https://www.strava.com/oauth/authorize?{urllib.parse.urlencode(params)}"

    return redirect(auth_url)

# Callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Strava
@app.route("/strava_callback", methods=["GET"])
async def strava_callback():
    code = request.args.get("code")
    state = request.args.get("state")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º state
    if not state or state not in state_storage:
        return "–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ state.", 400

    telegram_id = state_storage.pop(state)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if code:
        response = requests.post(
            "https://www.strava.com/oauth/token",
            data={
                "client_id": STRAVA_CLIENT_ID,
                "client_secret": STRAVA_CLIENT_SECRET,
                "code": code,
                "grant_type": "authorization_code"
            }
        )
        if response.status_code == 200:
            bot.send_message(chat_id=telegram_id, text="–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ Strava! üéâ")
            return "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ Telegram!"
        else:
            bot.send_message(chat_id=telegram_id, text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Strava. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Strava.", 400
    else:
        bot.send_message(chat_id=telegram_id, text="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Strava. –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.")
        return "–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.", 400

# –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=PORT)
